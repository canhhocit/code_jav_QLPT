package com.example.logincustomer.ui.Account;

import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.example.logincustomer.R;
import com.example.logincustomer.data.Adapter.AccountAdapter;
import com.example.logincustomer.data.DAO.account_DAO;
import com.example.logincustomer.data.Model.Account;

import java.util.ArrayList;
import java.util.List;

public class account_activity extends AppCompatActivity {

    private EditText edtUsername, edtPassword;
    private Button btnThem;
    private ListView lvUser;

    private List<Account> accountList;
    private AccountAdapter adapter;
    private account_DAO accountDao;

    // Bi·∫øn h·ªó tr·ª£ s·ª≠a
    private boolean isEditing = false;
    private int editPosition = -1;
    private int editingId = -1; // l∆∞u id khi s·ª≠a

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.account_activity);
        anhxa();

        accountDao = new account_DAO(this);

        // üîπ L·∫•y to√†n b·ªô t√†i kho·∫£n t·ª´ DB
        accountList = new ArrayList<>(accountDao.getAllAccount());

        // üîπ G·∫Øn adapter v√†o ListView
        adapter = new AccountAdapter(this, R.layout.layout_account_item, accountList, this);
        lvUser.setAdapter(adapter);

        // üîπ X·ª≠ l√Ω khi nh·∫•n n√∫t "Th√™m" ho·∫∑c "L∆∞u s·ª≠a"
        btnThem.setOnClickListener(v -> {
            String username = edtUsername.getText().toString().trim();
            String password = edtPassword.getText().toString().trim();

            if (username.isEmpty() || password.isEmpty()) {
                Toast.makeText(this, "Vui l√≤ng nh·∫≠p ƒë·∫ßy ƒë·ªß th√¥ng tin", Toast.LENGTH_SHORT).show();
                return;
            }

            if (isEditing) {
                // ‚úÖ C·∫≠p nh·∫≠t t√†i kho·∫£n
                Account acc = new Account(editingId, username, password);
                accountDao.updateAccount(acc);

                Toast.makeText(this, "ƒê√£ c·∫≠p nh·∫≠t t√†i kho·∫£n", Toast.LENGTH_SHORT).show();

                // Reset tr·∫°ng th√°i
                isEditing = false;
                editPosition = -1;
                editingId = -1;
                btnThem.setText("X√°c nh·∫≠n");
            } else {
                // ‚úÖ Th√™m t√†i kho·∫£n m·ªõi
                Account acc = new Account(0, username, password);
                accountDao.insertAccount(acc);
                Toast.makeText(this, "ƒê√£ th√™m t√†i kho·∫£n: " + username, Toast.LENGTH_SHORT).show();
            }

            // üîπ C·∫≠p nh·∫≠t l·∫°i danh s√°ch sau khi th√™m/s·ª≠a
            refreshList();

            // üîπ X√≥a d·ªØ li·ªáu nh·∫≠p
            edtUsername.setText("");
            edtPassword.setText("");
        });
    }

    private void anhxa() {
        edtUsername = findViewById(R.id.acc_edtUsername);
        edtPassword = findViewById(R.id.acc_edtPassword);
        btnThem = findViewById(R.id.acc_btnThem);
        lvUser = findViewById(R.id.acc_lvUser);
    }

    // üîπ H√†m ƒë∆∞·ª£c Adapter g·ªçi khi ch·ªçn "S·ª≠a"
    public void loadDataToEdit(Account account, int position) {
        edtUsername.setText(account.getUsername());
        edtPassword.setText(account.getPass());
        isEditing = true;
        editPosition = position;
        editingId = account.getId(); // l∆∞u id ƒë·ªÉ update DB
        btnThem.setText("L∆∞u s·ª≠a");
    }

    // üîπ H√†m load l·∫°i d·ªØ li·ªáu sau khi th√™m / s·ª≠a / x√≥a
    private void refreshList() {
        accountList.clear();
        accountList.addAll(accountDao.getAllAccount());
        adapter.notifyDataSetChanged();
    }
}
